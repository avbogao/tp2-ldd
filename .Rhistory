load("tp2.RData")
library(tidyr)
library(tidyverse)
library(ggplot2)
library(Metrics)
#BASE MODIFICADA
fake_news= fake_news %>%
mutate(categoria_negativa = cut(negative, breaks=c(-Inf, 2,4,6,8,Inf), labels = c('Menor a 2%','2% a 4%', '4% a 6%', '6% a 8%','Más de 8%')))%>%
mutate(cantidad_palabras_titulo = cut(title_words, breaks=c(-Inf, 5,10,15,20,Inf), labels = c('Menor a 5','5 a 10', '10 a 15', '15 a 20','Más de 20')))
View(fake_news)
load("tp2.RData")
library(tidyr)
#BASE MODIFICADA
fake_news= fake_news %>%
mutate(categoria_negativa = cut(negative, breaks=c(-Inf, 2,4,6,8,Inf), labels = c('Menor a 2%','2% a 4%', '4% a 6%', '6% a 8%','Más de 8%')))%>%
mutate(cantidad_palabras_titulo = cut(title_words, breaks=c(-Inf, 5,10,15,20,Inf), labels = c('Menor a 5','5 a 10', '10 a 15', '15 a 20','Más de 20')))
library(dplyr)
#BASE MODIFICADA
fake_news= fake_news %>%
mutate(categoria_negativa = cut(negative, breaks=c(-Inf, 2,4,6,8,Inf), labels = c('Menor a 2%','2% a 4%', '4% a 6%', '6% a 8%','Más de 8%')))%>%
mutate(cantidad_palabras_titulo = cut(title_words, breaks=c(-Inf, 5,10,15,20,Inf), labels = c('Menor a 5','5 a 10', '10 a 15', '15 a 20','Más de 20')))
library(tidyr)
library(tidyverse)
library(ggplot2)
library(dplyr)
load("tp2.RData")
library(Metrics)
ggplot(fake_news, aes(x = type, y = negative)) + geom_col()
news = fake_news %>% select(type,title_has_excl,negative,title_words)
View(news)
ggplot(news, aes(x = type, y = negative)) + geom_col()
ggplot(news, aes(x = type, y = title_has_excl)) + geom_col()
ggplot(news, aes(x = type, y = title_words)) + geom_col()
ggplot(news, aes(x = type, y = n())) + geom_col()
ggplot(news, aes(x = type, fill = negative)) + geom_bar(position = "fill")
ggplot(news, aes(x = type, fill = negative)) + geom_bar(position = "dodge")
ggplot(news, aes(x = type, fill = negative)) + geom_bar()
ggplot(news, aes(x = type, y = title_words)) + geom_col()
ggplot(news, aes(x = type, y = title_has_excl)) + geom_col()
#Cantidad de noticias que tienen signos de exclamación en el titulo
fake_news %>%
group_by(type)%>%
count(title_has_excl)%>%
ggplot(aes(x=title_has_excl, y = n))+
geom_bar(stat = 'identity')+
labs(title = 'Cantidad de noticias que contienen signos de exclamación', x= 'Contiene o no contiene', y='Cantidad')+
theme(plot.title = element_text(face='bold'))+
facet_grid(~type)
fake_news %>%
group_by(type)%>%
count(categoria_negativa)%>%
ggplot(aes(x=categoria_negativa, y = n))+
geom_bar(stat = 'identity')+
labs(title = 'Cantidad de noticias que contienen % expresiones negativas en el titulo', x= '% contenido', y='Cantidad')+
theme(plot.title = element_text(face='bold'))+
facet_grid(~type)
#Cantidad de palabras en el titulo
fake_news %>%
group_by(type)%>%
count(cantidad_palabras_titulo)%>%
ggplot(aes(x=cantidad_palabras_titulo, y = n))+
geom_bar(stat = 'identity')+
labs(title = 'Cantidad de palabras en el titulo', x= 'Cantidad de palabras en el titulo', y='Cantidad de noticias')+
theme(plot.title = element_text(face='bold'))+
facet_grid(~type)
#BASE MODIFICADA
fake_news= fake_news %>%
mutate(categoria_negativa = cut(negative, breaks=c(-Inf, 2,4,6,8,Inf), labels = c('Menor a 2%','2% a 4%', '4% a 6%', '6% a 8%','Más de 8%')))%>%
mutate(cantidad_palabras_titulo = cut(title_words, breaks=c(-Inf, 5,10,15,20,Inf), labels = c('Menor a 5','5 a 10', '10 a 15', '15 a 20','Más de 20')))
#Cantidad de noticias que tienen signos de exclamación en el titulo
fake_news %>%
group_by(type)%>%
count(title_has_excl)%>%
ggplot(aes(x=title_has_excl, y = n))+
geom_bar(stat = 'identity')+
labs(title = 'Cantidad de noticias que contienen signos de exclamación', x= 'Contiene o no contiene', y='Cantidad')+
theme(plot.title = element_text(face='bold'))+
facet_grid(~type)
fake_news %>%
group_by(type)%>%
count(categoria_negativa)%>%
ggplot(aes(x=categoria_negativa, y = n))+
geom_bar(stat = 'identity')+
labs(title = 'Cantidad de noticias que contienen % expresiones negativas en el titulo', x= '% contenido', y='Cantidad')+
theme(plot.title = element_text(face='bold'))+
facet_grid(~type)
#Cantidad de palabras en el titulo
fake_news %>%
group_by(type)%>%
count(cantidad_palabras_titulo)%>%
ggplot(aes(x=cantidad_palabras_titulo, y = n))+
geom_bar(stat = 'identity')+
labs(title = 'Cantidad de palabras en el titulo', x= 'Cantidad de palabras en el titulo', y='Cantidad de noticias')+
theme(plot.title = element_text(face='bold'))+
facet_grid(~type)
set.seed(32)
sample_fn = sample(c(TRUE, FALSE), nrow(fake_news), replace = T,prob=c(0.8,0.2))
train_fn  <- fake_news[sample_fn, ]
test_fn   <- fake_news[!sample_fn, ]
library(class)
# Clasificador con kNN
test_pred_k5 = knn(
train = train_fn[,-ncol(train_fn)],
test = test_fn[,ncol(test_fn)],
cl = train_fn[, ncol(train_fn)],
k = 5
)
# Clasificador con kNN
test_pred_k5 = knn(
train = train_fn[,-ncol(train_fn)],
test = test_fn[,-ncol(test_fn)],
cl = train_fn[, ncol(train_fn)],
k = 5
)
# Clasificador con kNN
test_pred_k5 = knn(
train = train_fn[,c("negative","title_words","title_has_excl")],
test = test_fn[,c("negative","title_words","title_has_excl")],
cl = test_fn$type,
k = 5
)
View(test_fn)
View(train_fn)
# Clasificador con kNN
test_pred_k5 = knn(
train = train_fn[,c("title_words","title_has_excl","negative")],
test = test_fn[,c("title_words","title_has_excl","negative")],
cl = test_fn$type,
k = 5
)
set.seed(32)
sample_fn = sample(c(TRUE, FALSE), nrow(fake_news), replace = T,prob=c(0.5,0.5))
train_fn  <- fake_news[sample_fn, ]
test_fn   <- fake_news[!sample_fn, ]
# Clasificador con kNN
test_pred_k5 = knn(
train = train_fn[,c("title_words","title_has_excl","negative")],
test = test_fn[,c("title_words","title_has_excl","negative")],
cl = test_fn$type,
k = 5
)
sample_fn = sample(c(TRUE, FALSE), nrow(fake_news), replace = T)
train_fn  <- fake_news[sample_fn, ]
test_fn   <- fake_news[!sample_fn, ]
sample_fn = sample(c(TRUE, FALSE), nrow(fake_news), replace = T)
train_fn  <- fake_news[sample_fn, ]
set.seed(32)
sample_fn = sample(c(TRUE, FALSE), nrow(fake_news), replace = T)
train_fn  <- fake_news[sample_fn, ]
test_fn   <- fake_news[!sample_fn, ]
set.seed(32)
sample_fn = sample(c(TRUE, FALSE), nrow(fake_news), replace = T)
train_fn  <- fake_news[sample_fn, ]
test_fn   <- fake_news[!sample_fn, ]
set.seed(32)
sample_fn = sample(c(TRUE, FALSE), nrow(fake_news), replace = T)
train_fn  <- fake_news[sample_fn, ]
test_fn   <- fake_news[!sample_fn, ]
sample_fn = sample(c(TRUE, FALSE), nrow(fake_news), replace = T,prob(0.5,0.5))
set.seed(32)
sample_fn = sample(c(TRUE, FALSE), nrow(fake_news), replace = T,prob(0.5,0.5))
train_fn  <- fake_news[sample_fn, ]
set.seed(32)
sample_fn = sample(c(TRUE, FALSE), nrow(fake_news), replace = T,prob=c(0.5,0.5))
train_fn  <- fake_news[sample_fn, ]
test_fn   <- fake_news[!sample_fn, ]
sample_fn = sample(c(TRUE, FALSE), nrow(fake_news), replace = T,prob=0.5)
